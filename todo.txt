- Добавить stage scroller? (сейчас табы)
? Заменить все серверы на каналы (сделать названия как в оригинале)
- Принятие инвайтов на канал в личных сообщениях
- Улучшить NavigateToRoom (сохранять последнюю комнату???, выбирать текстовую комнату с доступом)
- Перенести Heading && HeadingLevel в reExport
? Заменить все Formik[input name] на FormikField
- Очистить все зависимости (очень много модулей скачано, но не используется)
- Изменить все .addEventListener и useEventListener на свой useEvent (сейчас называется useEventListener)
- Сделать всем импутам onChange (value) and onChangeEvent (e)
-? Заменить все objectKeys на Object.keys 
- Удалить usehooks-ts
- Вынести все классы в styles
- Убрать conditional()
??? (уже пофиксил focusVisible) Заменить button на div (от button больше проблем чем пользы)
? Убрать все truncated
- Теперь у всего мин в 0, со, убрать трукатед, минв0, изменить трукатед вордс
- Заменить все undefined на null (что бы знать что значение существует но null)
- Добавить useCallback и тд ко всем хукам!!!
??? Заменить отображение channel id в url на channel identifier
- Заменить все пути ../../ на алиасы
? Найти или сделать типы для формика (сейчас хуета тотальная)
? Добавить offline mode, (npx create-react-app my-app --template cra-template-pwa-typescript) 
- Перенести все компоненты(.scss файлы) из root/styles/components в их соответствующие комноненты
- Сделать тултипы только по ховеру мышки что бы их не было при таче с телефона
- change Descendant[] to RTETypes.Nodes
- сейчас текст сообщения ни как не валидируется (просто строка), нужно
добавить общую валидацию для значения (RTETypes.Nodes) и возможно сделать общую
валидацию для клиента и сервера
-!!! компонент MoveFocusInside рендерит div, что не очивидно при использовании,
в следствии чего MoveFocusInside часто используется как обарачивающий компонент,
например в списках, из за чего получается такая конструкция: ul>div>li, чего 
быть не должно. Решение: исправить все подобные ошибочные использования ИЛИ
вместо рендера div принимать рендер-функцию передающую ref, который вследствии
будет фокуситься, вместо того чтобы искать фокусированные елементы внутри div,
возможно стоит изменить назвние на FocusTo / Focused / FocusAt.
Компонент сделан, заменить все MoveFocusInside на FocusAt
- заменить twClassName на cn
- сейчас много бойлерплейта повторяется для создания попапов, компонент Popup
почти не используется, хотя может. Найти и заменить всё что можно заменить
компонентом Popup
- поменять систему фокуса в приложении, сейас фокус ринг работает через
css, из за чего он частично или полностью скрывается в елементах
расположенных абсолютно из за overflow-hidden, поменять на react-focus-rings
-??? поменять все классы h-dvh на h-dvh (фулл сайз для мобилок (tailwind 3.4))
-!!! сделать компонент Ul, принимающий array и рендер функцию и accessible props
для ul компонента, заменить все списки на Ul
-!!! много backend типов интерфейсы и начинаются с ITypeName
-!!! на данный момент сообщения не знают про реакции, возможно стоит оставить
это и добавить реакции как отдельное энтити, или добавить их в само сообщение,
что вероятно не самый удачный подход
-??? добавить новую систему подписки на энтити, вместо realtime подписки
добавить возможность выбора подписки между realtime, pooling с выбором 
интервала, и static для одноразового сбора информации и кеширования на клиенте,
все виды подписок батчить по эндпоинту
-!!! заменить все рендер компоненты на renderFunction из utils-react
-!!! Scrollable какая то параша, нужно менять
-!!! добавить кэш к redux base api, включить StrictMode
-!!! у тултипа при тапе срабатывает mouseEnter, и стейт не меняется пока не
нажать в другое место (с телефона)
-??? сейчас диспатчер редакс эвентов требует много кода: useAppDispatch,
EntityNameSlice.actions.actionName и функцию комбинирующию это,
заменить на более удобный аналог
-!!! max-h-dvh супер плохо где либо кроме обёртки Scrollable, УБРАТЬ
- в модалке добавления друга слишком большое путое пространство, сделать маленьким
и увеличить только если найдены пользователи
-? мигрировать роутер на новую схему-роутер, вероятно будет легче разбираться
в нём
-!!! Валидацию сообщений можно сделать через Node.isNodeList(value)
-!!! добавить возможность оптимистичных обновлений в redux api, дать ожилаемый
результат и применить его, а после он изменится из за redux api
https://redux-toolkit.js.org/rtk-query/usage/manual-cache-updates#optimistic-updates
-??? смена онлайн статуса долго грузится, сделать оптимистичый запрос
-!!! добавить правильный шрифт, исправить все размеры текста, проверить все
font-weight
- заменить все contextValues на contextValue, т.к. value всего одно (объект)
-!!! заменить всё что связано с redux на store, useStore, Store
-??? найти tw плагин для замены focus-visible и hover на чтото типо focus-visible-hover
-??? изменить все accessible wrappers на прокси контексты вместо render functions
-??? заменить способ определения заблокирован OverlayItem или нет, сейчас
стрёмная проверка html елементов с аттрибутом blocked, изменить на хранение стейта
в контексте, если выше есть OverlayContext и у него значение isBlocked: true,
тогда возвращяем true
-??? обернуть сокет в типизированную обёртку, спрятав api, на сервере и клиенте
-??? заменить socket.emit на socket.emitWithAck, позволяет узнать дошёл
ли реквест до сервера, также нужно сделать обёртку чтобы проверять 
socket.connected перед отправкой, и если disconnected = true, то не отправляем
реквест
-??? изменить подход к подписке на энтити, сделать запросы не через (name, data)
а через ('data', [{name, data}, {name, data}, ...]), это позволит сделать один
запрос/ответ на множество энтити
-??? сократить колво subscribable entity, вместо этого изначально получать все
энтити и подписываться на них (хз где, в дб или в памяти, (можно создать отдельный
документ в дб где будут хранится имя, id, и подписчики энтити))
-!!! поменять компоненты UserStatus и UserAvatar, вложить в них Status и Avatar
которые бы представляли ui, а UserStatus и UserAvatar должны принимать userId
и брать необходимые значения из redux
-!!! заменить все name='...' в картинках требующих имя картинки на IMAGES.SPRITE.CALL
без .NAME, что позволит использовать значение IMAGES а не строку имени
-??? Переделать Separator, сейчас там height, что не особо имеет смысл при
выборе direction, возможно стоит поменять
-??? сейчас на оверлеях с анимациями есть задержка перед анмаунтом, 
соответственно фокус возвращяется только после задержки, что не удобно,
возможно стоит убрать ограничение на фокус во время анимации закрытия
-??? добавить useDebounce и пересмотреть useThrottle
-!!! переделать useShared(name)Observer
-!!! убрать все экспорты типов, прилагающихся к компонентам, функциям, хукам,
заменить на общий namespace (имба темка)